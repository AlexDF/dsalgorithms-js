name: CI
on:
  push:
    branches: [main]
    tags:
      # matches v1.2.3
      - '^v[0-9]+\.[0-9]+\.[0-9]+$'
      # matches v1.2.3-alpha.1, v1.2.3-beta.2, etc.
      - '^v[0-9]+\.[0-9]+\.[0-9]+-(alpha|beta|rc)\.[0-9]+$*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.19.0', 22, 24]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run lint:check
      - run: npm run format:check
      - run: npm test
      - run: npm run build

  publish:
    # Publish only if tests pass and it's a semantic versioning tag
    needs: test
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm run build

      - name: Validate and verify version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")

          # Validate semantic versioning format
          if [[ ! $TAG_VERSION =~  ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9\.-]+)?$ ]]; then
            echo "❌ Invalid semantic version: $TAG_VERSION"
            exit 1
          fi

          # Verify tag matches package.json
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "❌ Tag version ($TAG_VERSION) doesn't match package.json ($PACKAGE_VERSION)"
            exit 1
          fi

          echo "✅ Version validation passed: $TAG_VERSION"

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
